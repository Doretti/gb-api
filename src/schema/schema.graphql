## NOTE: This schema was generated by Graphback and should not be changed manually

"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

input BooleanInput {
  ne: Boolean
  eq: Boolean
}

input CreateTODOInput {
  text: String!
  complited: Boolean!
}

input IDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  in: [ID!]
}

input MutateTODOInput {
  id: ID!
  text: String
  complited: Boolean
}

type Mutation {
  createTODO(input: CreateTODOInput!): TODO
  updateTODO(input: MutateTODOInput!): TODO
  deleteTODO(input: MutateTODOInput!): TODO
}

input OrderByInput {
  field: String!
  order: SortDirectionEnum = ASC
}

input PageRequest {
  limit: Int
  offset: Int
}

type Query {
  getTODO(id: ID!): TODO
  findTODOS(filter: TODOFilter, page: PageRequest, orderBy: OrderByInput): TODOResultList!
}

enum SortDirectionEnum {
  DESC
  ASC
}

input StringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  in: [String!]
  contains: String
  startsWith: String
  endsWith: String
}

type Subscription {
  newTODO(filter: TODOSubscriptionFilter): TODO!
  updatedTODO(filter: TODOSubscriptionFilter): TODO!
  deletedTODO(filter: TODOSubscriptionFilter): TODO!
}

"""@model"""
type TODO {
  id: ID!
  text: String!
  complited: Boolean!
}

input TODOFilter {
  id: IDInput
  text: StringInput
  complited: BooleanInput
  and: [TODOFilter!]
  or: [TODOFilter!]
  not: TODOFilter
}

type TODOResultList {
  items: [TODO]!
  offset: Int
  limit: Int
  count: Int
}

input TODOSubscriptionFilter {
  and: [TODOSubscriptionFilter!]
  or: [TODOSubscriptionFilter!]
  not: TODOSubscriptionFilter
  id: IDInput
  text: StringInput
  complited: BooleanInput
}